---
import Blocks from "../Blocks.astro";
import Button from "@components/Button.astro";
import Flex from "@components/composition/Flex.astro";

interface Link {
  title: string;
  url: string;
}

interface Attrs {
  heading: string;
  links: Link[];
}

interface Props {
  blockName: string;
  attrs: Attrs;
  innerBlocks: any[];
}

interface ButtonAttrs {
  className: string;
}

interface ButtonBlock {
  attrs: ButtonAttrs;
  innerHTML: string;
}

const { attrs, innerBlocks } = Astro.props;
const buttons = innerBlocks.pop()?.innerBlocks.map((button: ButtonBlock) => {
  const href = button.innerHTML.match(/href="([^"]*)"/);
  const title = button.innerHTML.match(/>([^<]*)<\/a>/);
  return {
    class: (button.attrs?.className || "").replace("is-style-", "button--"),
    url: href ? href[1] : "",
    title: title ? title[1] : "",
  };
});
---

<Flex class="hero gap--xl pb--2xl" column justify-center>
  <h2 class="fs--2xl text-center" set:html={attrs.heading} />

  {
    buttons.length && (
      <nav>
        <Flex class="gap--md" tagName="ul" role="list" justify-center>
          {buttons.map((button: any) => (
            <li>
              <Button className={button.class} url={button.url} title={button.title} />
            </li>
          ))}
        </Flex>
      </nav>
    )
  }
</Flex>

<style></style>
