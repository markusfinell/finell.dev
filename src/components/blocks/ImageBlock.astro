---
import type { Code } from "astro:components";
import api from "../../api";
import { Image } from "astro:assets";

interface Attrs {
  id: number;
  sizeSlug?: string;
  linkDestination?: string;
}

interface Props {
  attrs: Attrs;
  alt?: string;
  innerHTML?: string;
}

const { attrs, alt = "", innerHTML = "" } = Astro.props;
const image = await fetch(`${api.url}/finell/v1/media/?id=${attrs.id}?size=${attrs.sizeSlug}`).then((res) => res.json());
const [src, width, height] = image.src;

const customAlt = innerHTML.match(/alt="([^"]*)"/)[1];

const imageProps = {
  src,
  width,
  height,
  alt: customAlt || alt,
  srcset: image.srcset,
  sizes: image.sizes,
};

const link = (innerHTML.match(/<a [^>]+>/) || [""]).shift();
const regex = /(\w+)\s*=\s*"([^"]*)"/g;
const linkAttrs = {};
let match: string[];

while ((match = regex.exec(link)) !== null) {
  linkAttrs[match[1]] = match[2];
}
---

<figure class:list={["image", ...api.blockClass(attrs)]}>
  {
    link ? (
      <a {...linkAttrs}>
        <Image {...imageProps} />
      </a>
    ) : (
      <Image {...imageProps} />
    )
  }
</figure>

<style>
  .image {
    margin: 0;
  }

  .image img {
    width: 100%;
  }
</style>
